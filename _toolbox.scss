/*----------------------------------------------------*/
// Toolbox.
// This has all the classes you need to quickly create styled elements
// Usage: <element class="t-p-30 t-mb-xs-20 ...etc. "></element>
/*----------------------------------------------------*/

/*----------------------------------------------------*/
// Paddings.
/*----------------------------------------------------*/

$browser-context: 16; // Default

@function em($pixels, $context: $browser-context) {
    @return #{$pixels/$context}em;
}

// all
@for $i from 0 through 10 {
    .t-p-#{$i * 10} {
        padding: em($i * 10);
    }
}

// top bottom
@for $i from 0 through 10 {
    .t-ptb-#{$i * 10} {
        padding: em($i * 10) 0;
    }
}

// >= 768
@media (min-width: em(768)) {

    // all
    @for $i from 0 through 10 {
        .t-p-sm-#{$i * 10} {
            padding: em($i * 10);
        }
    }

    // top bottom
    @for $i from 0 through 10 {
        .t-ptb-sm-#{$i * 10} {
            padding: em($i * 10) 0;
        }
    }
}

// >= 1024
@media (min-width: em(1024)) {

    // all
    @for $i from 0 through 10 {
        .t-p-md-#{$i * 10} {
            padding: em($i * 10);
        }
    }

    // top bottom
    @for $i from 0 through 10 {
        .t-ptb-md-#{$i * 10} {
            padding: em($i * 10) 0;
        }
    }
}

// >= 1200
@media (min-width: em(75)) {

    // all
    @for $i from 0 through 10 {
        .t-p-lg-#{$i * 10} {
            padding: em($i * 10);
        }
    }

    // top bottom
    @for $i from 0 through 10 {
        .t-ptb-lg-#{$i * 10} {
            padding: em($i * 10) 0;
        }
    }
}

/*----------------------------------------------------*/
// Margins.
/*----------------------------------------------------*/

// bottom
@for $i from 0 through 20 {
    .t-mb-#{$i * 10} {
        margin-bottom: em($i * 10);
    }
}

// >= 768
@media (min-width: em(768)) {

    // bottom
    @for $i from 0 through 10 {
        .t-mb-sm-#{$i * 10} {
            margin-bottom: em($i * 10);
        }
    }
}

// >= 1024
@media (min-width: em(1024)) {

    // bottom
    @for $i from 0 through 10 {
        .t-mb-md-#{$i * 10} {
            margin-bottom: em($i * 10);
        }
    }
}

// >= 1200
@media (min-width: em(1200)) {

    // bottom
    @for $i from 0 through 10 {
        .t-mb-lg-#{$i * 10} {
            margin-bottom: em($i * 10);
        }
    }
}

/*----------------------------------------------------*/
// Resets.
/*----------------------------------------------------*/
.t-mt-0 {
    margin-top: 0;
}

/*----------------------------------------------------*/
// Text helpers.
/*----------------------------------------------------*/
.t-t-left {
    text-align: left;
}

.t-t-right {
    text-align: right;
}

.t-t-center {
    text-align: center;
}

.t-t-uc {
    text-transform: uppercase;
}

.t-t-lc {
    text-transform: lowercase;
}

.t-t-nt {
    text-transform: none;
}

.t-t-bold {
    font-weight: bold;
}

.t-t-smaller {
    font-size: smaller;
}

/*----------------------------------------------------*/
// Block helpers.
/*----------------------------------------------------*/
.t-b-b {
    display: block;
}

.t-b-ib {
    display: inline-block;
}

.t-b-rounded {
    border-radius: 50%;
}

.t-b-center {
    margin: 0 auto;
}

.t-overflow-hidden {
    overflow: hidden;
}

.t-height-auto {
    height: auto;
}

.t-clear {
    clear: both;
}

/*----------------------------------------------------*/
// Element helpers.
/*----------------------------------------------------*/
.t-pos-rel {
    position: relative;
}

.t-pos-abs {
    position: absolute;
}

.list-reset {
    list-style: none;
    padding: 0;
    margin-top: 0;
    margin-bottom: 0;
}

/*----------------------------------------------------*/
// Mixins.
/*----------------------------------------------------*/

//calculate rem
//use @include font(18px,30px) to set font-size and line-height in rem with px fallback
@function calculateRem($size) {
    $remSize: $size / 16px;
    @return $remSize * 1rem;
}

@mixin font($size: 16px, $lineheight: 30px) {
    font-size: $size;
    font-size: calculateRem($size);
    line-height: $lineheight;
    line-height: calculateRem($lineheight);
}

/*----------------------------------------------------*/
// General elements.
/*----------------------------------------------------*/
.browserupgrade {
    //needs basic styling
}

/*----------------------------------------------------*/
// Responsively.
/*----------------------------------------------------*/

//repsonsive embeds
.t-embed-responsively {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    overflow: hidden;
    max-width: 100%; }
.t-embed-responsively iframe,
.t-embed-responsively object,
.t-embed-responsively embed,
.t-embed-responsively video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

//responsive images
.t-img-responsive {
    max-width: 100%;

    &.-wide {
        width: 100%;
    }
}

/*----------------------------------------------------*/
// Resets and basic settings.
/*----------------------------------------------------*/

body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

//button reset
.btn {
    display: inline-block;
    border: 1px solid;
    padding: 0;
    cursor: pointer;
    background: none;
}

/*----------------------------------------------------*/
// Flexbox.
/*----------------------------------------------------*/

.flex {
    display: flex;
}

.flex-vert {
    align-items: center;
}

.flex-center {
    justify-content: center;
}

.flex-right {
    justify-content: flex-end;
}

.flex-stretch {
    align-items: stretch;
}

// Modernizr fallback
.no-flexbox {

    .flex {
        display: table;
    }

    .flex-item {
        display: table-cell;
    }

    .flex-center {
        text-align: center;
    }

    .flex-right {
        text-align: right;
    }
}
